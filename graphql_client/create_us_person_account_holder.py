# Generated by ariadne-codegen
# Source: queries.gql

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import EmploymentStatus, PhoneLabel


class CreateUSPersonAccountHolder(BaseModel):
    create_us_person_account_holder: Optional[
        Annotated[
            Union[
                "CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolder",
                "CreateUSPersonAccountHolderCreateUsPersonAccountHolderUserError",
                "CreateUSPersonAccountHolderCreateUsPersonAccountHolderAccessDeniedError",
            ],
            Field(discriminator="typename__"),
        ]
    ] = Field(alias="createUSPersonAccountHolder")


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolder(
    BaseModel
):
    typename__: Literal["USPersonAccountHolder"] = Field(alias="__typename")
    id: str
    email: Optional[str]
    date_of_birth: Optional[str] = Field(alias="dateOfBirth")
    external_id: Optional[str] = Field(alias="externalId")
    updated_at: Optional[str] = Field(alias="updatedAt")
    created_at: Optional[str] = Field(alias="createdAt")
    name: Optional[
        "CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderName"
    ]
    billing_address: Optional[
        "CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderBillingAddress"
    ] = Field(alias="billingAddress")
    phone_numbers: Optional[
        List[
            "CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderPhoneNumbers"
        ]
    ] = Field(alias="phoneNumbers")
    identification_document: Optional[
        "CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderIdentificationDocument"
    ] = Field(alias="identificationDocument")
    person_credit_risk_attributes: Optional[
        "CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderPersonCreditRiskAttributes"
    ] = Field(alias="personCreditRiskAttributes")


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderName(
    BaseModel
):
    given_name: Optional[str] = Field(alias="givenName")
    family_name: Optional[str] = Field(alias="familyName")
    title: Optional[str]
    suffix: Optional[str]
    middle_name: Optional[str] = Field(alias="middleName")


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderBillingAddress(
    BaseModel
):
    street_address: Optional[str] = Field(alias="streetAddress")
    extended_address: Optional[str] = Field(alias="extendedAddress")
    postal_code: Optional[str] = Field(alias="postalCode")
    region: Optional[str]
    locality: Optional[str]
    country_code_alpha_3: Optional[str] = Field(alias="countryCodeAlpha3")


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderPhoneNumbers(
    BaseModel
):
    country_code: Optional[str] = Field(alias="countryCode")
    number: Optional[str]
    label: Optional[PhoneLabel]


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderIdentificationDocument(
    BaseModel
):
    social_security_number: Optional[
        "CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderIdentificationDocumentSocialSecurityNumber"
    ] = Field(alias="socialSecurityNumber")


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderIdentificationDocumentSocialSecurityNumber(
    BaseModel
):
    number_hash: Optional[str] = Field(alias="numberHash")
    country_code_alpha_3: Optional[str] = Field(alias="countryCodeAlpha3")


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderPersonCreditRiskAttributes(
    BaseModel
):
    total_annual_income: Optional[
        List[
            "CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderPersonCreditRiskAttributesTotalAnnualIncome"
        ]
    ] = Field(alias="totalAnnualIncome")
    current_debt_obligations: Optional[
        List[
            "CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderPersonCreditRiskAttributesCurrentDebtObligations"
        ]
    ] = Field(alias="currentDebtObligations")
    employment_status: Optional[EmploymentStatus] = Field(alias="employmentStatus")


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderPersonCreditRiskAttributesTotalAnnualIncome(
    BaseModel
):
    value: Optional[Any]
    currency_code: Optional[str] = Field(alias="currencyCode")


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderPersonCreditRiskAttributesCurrentDebtObligations(
    BaseModel
):
    value: Optional[Any]
    currency_code: Optional[str] = Field(alias="currencyCode")


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUserError(BaseModel):
    typename__: Literal["UserError"] = Field(alias="__typename")
    errors: Optional[
        List["CreateUSPersonAccountHolderCreateUsPersonAccountHolderUserErrorErrors"]
    ]


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderUserErrorErrors(BaseModel):
    path: Optional[List[str]]
    code: Optional[str]
    description: Optional[str]


class CreateUSPersonAccountHolderCreateUsPersonAccountHolderAccessDeniedError(
    BaseModel
):
    typename__: Literal["AccessDeniedError"] = Field(alias="__typename")


CreateUSPersonAccountHolder.model_rebuild()
CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolder.model_rebuild()
CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderIdentificationDocument.model_rebuild()
CreateUSPersonAccountHolderCreateUsPersonAccountHolderUSPersonAccountHolderPersonCreditRiskAttributes.model_rebuild()
CreateUSPersonAccountHolderCreateUsPersonAccountHolderUserError.model_rebuild()
