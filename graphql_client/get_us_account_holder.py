# Generated by ariadne-codegen
# Source: queries.gql

from typing import Annotated, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel


class GetUSAccountHolder(BaseModel):
    node: Optional[
        Annotated[
            Union[
                "GetUSAccountHolderNodeNode",
                "GetUSAccountHolderNodeUSBusinessAccountHolder",
                "GetUSAccountHolderNodeUSPersonAccountHolder",
            ],
            Field(discriminator="typename__"),
        ]
    ]


class GetUSAccountHolderNodeNode(BaseModel):
    typename__: Literal[
        "APIKey",
        "AccountHolderApplicationDocument",
        "AccountHolderCardProductApplication",
        "AccountHolderCardProductApplicationOffer",
        "AccountHolderProvisioning",
        "AccountHolderProvisioningWorkflowAction",
        "AccountStatusActiveEvent",
        "AccountStatusClosedEvent",
        "AccountStatusPendingClosureEvent",
        "AccountStatusSuspendedEvent",
        "AccountStatusUnderReviewEvent",
        "AchExternallyInitatedDepositFailedEvent",
        "AchExternallyInitatedDepositProcessedEvent",
        "AchExternallyInitatedDepositReceivedEvent",
        "AchExternallyInitiatedWithdrawalFailedEvent",
        "AchExternallyInitiatedWithdrawalProcessedEvent",
        "AchExternallyInitiatedWithdrawalReceivedEvent",
        "AchHoldAddedEvent",
        "AchHoldRemovedEvent",
        "AchTransferHoldAddedEvent",
        "AchTransferHoldRemovedEvent",
        "AdminAgentOrganization",
        "AmountLimitInterFinancialAccountTransferRule",
        "AmountLimitSpendRule",
        "AuthorizationAndClearEvent",
        "AuthorizationEvent",
        "AuthorizedUserCardProductApplication",
        "BalanceInquiryEvent",
        "CVVSpendRule",
        "CardArtDocument",
        "CardDataInputCapabilitySpendRule",
        "CardDigitalWalletToken",
        "CardDigitalWalletTokenActivatedEvent",
        "CardDigitalWalletTokenSuspendedEvent",
        "CardDigitalWalletTokenTerminatedEvent",
        "CardProduct",
        "CardProfileDocumentUploadSession",
        "CardProfileSet",
        "CardProfileSetRestricted",
        "CardTransactionProcessingTypeConditionSpendRule",
        "ClearingEvent",
        "CollaborativeAuthorizationEndpoint",
        "CommercialChargeCardFinancialAccountStatement",
        "CommercialRevolvingCardFinancialAccountStatement",
        "ConditionalRuleSetSpendRule",
        "ConsumerChargeCardFinancialAccountStatement",
        "ConsumerRevolvingCardFinancialAccountStatement",
        "CountLimitInterFinancialAccountTransferRule",
        "CountLimitSpendRule",
        "CreditCardTransferEvent",
        "CreditFunds",
        "CreditFundsACHTransferEvent",
        "CreditLedgerEntry",
        "CreditLimitChangeRequest",
        "CreditPayInFullCardFinancialAccountStatement",
        "CreditPlan",
        "CreditPlanTemplate",
        "CreditTransaction",
        "DebitFunds",
        "DebitFundsACHTransferEvent",
        "DebitLedgerEntry",
        "DebitTransaction",
        "DeliveryAttempt",
        "DepositAmountLimitSpendRule",
        "DepositCountLimitSpendRule",
        "DepositProcessingNetworkSpendRule",
        "DigitalCardProfile",
        "DirectDepositDetail",
        "DisbursementTransferEvent",
        "DocumentUploadLink",
        "EmployerFinancialAccount",
        "EnhancedDataEvent",
        "ExternalBankAccountAddedEvent",
        "ExternalBankAccountDetail",
        "ExternalBankAccountRemovedEvent",
        "ExternalFinancialBankAccount",
        "ExternallyInitiatedAchReleaseHoldTransfer",
        "ExternallyInitiatedWireTransfer",
        "FeeChargeRule",
        "FeeSchedule",
        "FeeTransferEvent",
        "FinancialAccount",
        "FinancialAccountCreditLimitUpdateFromProductFunding",
        "FinancialAccountPseudoBalanceUpdate",
        "FinancialAccountSnapshot",
        "FinancialAccountStatementReadyEvent",
        "FundsDepositCanceledEvent",
        "FundsDepositFailedEvent",
        "FundsDepositInitiatedEvent",
        "FundsDepositProcessedEvent",
        "FundsDepositProcessingEvent",
        "FundsDepositReturnedEvent",
        "FundsWithdrawalCanceledEvent",
        "FundsWithdrawalFailedEvent",
        "FundsWithdrawalInitiatedEvent",
        "FundsWithdrawalProcessedEvent",
        "FundsWithdrawalProcessingEvent",
        "FundsWithdrawalReturnedEvent",
        "IdentityVerificationDocumentUploadSession",
        "IntegratorInitiatedFundsDepositACHTransfer",
        "IntegratorInitiatedFundsDepositACHTransferEvent",
        "IntegratorInitiatedFundsWithdrawalACHTransfer",
        "IntegratorInitiatedFundsWithdrawalACHTransferEvent",
        "InterFinancialAccountTransfer",
        "InternalTransferFromFundingFinancialAccountToPaymentCardFinancialAccountCompletedEvent",
        "InternalTransferFromFundingFinancialAccountToPaymentCardFinancialAccountFailedEvent",
        "InternalTransferFromFundingFinancialAccountToPaymentCardFinancialAccountPendingEvent",
        "InternalTransferFromPaymentCardFinancialAccountToFundingFinancialAccountCompletedEvent",
        "InternalTransferFromPaymentCardFinancialAccountToFundingFinancialAccountFailedEvent",
        "InternalTransferFromPaymentCardFinancialAccountToFundingFinancialAccountPendingEvent",
        "IssuerPreliminaryAuthorizationEvent",
        "JournalEntry",
        "Ledger",
        "ManualAdjustmentEvent",
        "MastercardFleetAuthorizationData",
        "MastercardFleetEnhancedData",
        "MerchantCategorySpendRule",
        "MerchantCountrySpendRule",
        "MerchantIdentifierSpendRule",
        "Node",
        "NonOriginatedAchTransfer",
        "NonOriginatedAchTransferFailedEvent",
        "NonOriginatedAchTransferProcessedEvent",
        "NonOriginatedAchTransferReceivedEvent",
        "NonOriginatedAchTransferReturnedEvent",
        "NonVerifiedExternalUSFinancialBankAccount",
        "NonVerifiedExternalUSFinancialBankAccountDetail",
        "NotificationEvent",
        "OnboardingBusinessOrganizationInformation",
        "OnboardingPreliminaryBusinessInformation",
        "OneTimeACHTransfer",
        "Organization",
        "OriginatedAchTransfer",
        "OriginatedAchTransferCanceledEvent",
        "OriginatedAchTransferFailedEvent",
        "OriginatedAchTransferInitiatedEvent",
        "OriginatedAchTransferPendingEvent",
        "OriginatedAchTransferProcessedEvent",
        "OriginatedAchTransferProcessingEvent",
        "OriginatedAchTransferReturnedEvent",
        "PanEntryModeSpendRule",
        "PaymentCard",
        "PaymentCardActivatedEvent",
        "PaymentCardAuthorizationAndClearApprovedEvent",
        "PaymentCardAuthorizationAndClearDeclinedEvent",
        "PaymentCardAuthorizationApprovedEvent",
        "PaymentCardAuthorizationCreatedEvent",
        "PaymentCardAuthorizationDeclinedEvent",
        "PaymentCardAuthorizationReversedEvent",
        "PaymentCardBinRange",
        "PaymentCardClearedEvent",
        "PaymentCardClosedEvent",
        "PaymentCardEnhancedDataEvent",
        "PaymentCardSnapshot",
        "PaymentCardSuspendedEvent",
        "PaymentCardTransactionChargeback",
        "PaymentCardTransactionDispute",
        "PaymentCardUnsuspendedEvent",
        "PaymentCardVerificationApprovedEvent",
        "PaymentCardVerificationDeclinedEvent",
        "PaymentCreditTransaction",
        "PaymentDebitTransaction",
        "PaymentMethodToken",
        "PaymentOrder",
        "PayrollACHTransferEvent",
        "PayrollAdvance",
        "PayrollAdvanceRepaymentCompletedEvent",
        "PayrollAdvanceRepaymentTransfer",
        "PayrollAdvanceWriteOffCompletedEvent",
        "PayrollAdvanceWriteoffTransfer",
        "PayrollTransfer",
        "PhysicalCardGroupOrder",
        "PhysicalCardProfile",
        "PhysicalPaymentCardGroupOrderShipFailedEvent",
        "PhysicalPaymentCardGroupOrderShippedEvent",
        "PhysicalPaymentCardOrder",
        "PhysicalPaymentCardShipFailedEvent",
        "PhysicalPaymentCardShippedEvent",
        "PointOfServiceCategorySpendRule",
        "PostalCodeVerificationSpendRule",
        "RecurringACHTransfer",
        "RepaymentFailedEvent",
        "RepaymentProcessedEvent",
        "RepaymentProcessingEvent",
        "RepaymentReturnedEvent",
        "Report",
        "RequestedIdentityUpdate",
        "RestrictedAccountHolderSpendRule",
        "ReversalEvent",
        "RewardDefaultEarnRule",
        "RewardMerchantCategoryEarnRule",
        "RewardPointsTransfer",
        "RewardRedemptionConfiguration",
        "RiskApplicationSDK",
        "RiskApplicationSDKRevision",
        "RuleCollection",
        "ScheduledTransferAchEvent",
        "SecureCardBalanceRepaymentACHTransfer",
        "SecureCardBalanceRepaymentACHTransferEvent",
        "SecureDeposit",
        "SecureDepositACHTransfer",
        "SecureDepositACHTransferEvent",
        "SecureDepositCanceledEvent",
        "SecureDepositFailedEvent",
        "SecureDepositInitiatedEvent",
        "SecureDepositProcessedEvent",
        "SecureDepositProcessingEvent",
        "SecureDepositReturnedEvent",
        "SecureDepositTransferEvent",
        "SecuredDepositCommercialCreditCardFinancialAccountStatement",
        "SigningKey",
        "StreetAddressSpendRule",
        "Transfer",
        "TransferPurposeInterFinancialAccountTransferRule",
        "USAccountHolderApplicationDocumentUploadSession",
        "USPersonAuthorizedUser",
        "User",
        "ValidatedAddress",
        "VelocityInterFinancialAccountTransferRule",
        "VelocityRule",
        "VerificationEvent",
        "VirtualCardProfile",
        "VisaFleetAuthorizationData",
        "VisaFleetL2TransactionData",
        "VisaFleetL3EnhancedData",
        "WatchlistInterFinancialAccountTransferRule",
        "WebhookNotificationTarget",
        "WireTransfer",
    ] = Field(alias="__typename")


class GetUSAccountHolderNodeUSBusinessAccountHolder(BaseModel):
    typename__: Literal["USBusinessAccountHolder"] = Field(alias="__typename")
    typename__: Literal["USBusinessAccountHolder"] = Field(alias="__typename")
    business_profile: Optional[
        "GetUSAccountHolderNodeUSBusinessAccountHolderBusinessProfile"
    ] = Field(alias="businessProfile")


class GetUSAccountHolderNodeUSBusinessAccountHolderBusinessProfile(BaseModel):
    name: Optional["GetUSAccountHolderNodeUSBusinessAccountHolderBusinessProfileName"]


class GetUSAccountHolderNodeUSBusinessAccountHolderBusinessProfileName(BaseModel):
    legal_business_name: str = Field(alias="legalBusinessName")


class GetUSAccountHolderNodeUSPersonAccountHolder(BaseModel):
    typename__: Literal["USPersonAccountHolder"] = Field(alias="__typename")
    typename__: Literal["USPersonAccountHolder"] = Field(alias="__typename")
    id: str
    name: Optional["GetUSAccountHolderNodeUSPersonAccountHolderName"]


class GetUSAccountHolderNodeUSPersonAccountHolderName(BaseModel):
    family_name: Optional[str] = Field(alias="familyName")
    given_name: Optional[str] = Field(alias="givenName")


GetUSAccountHolder.model_rebuild()
GetUSAccountHolderNodeUSBusinessAccountHolder.model_rebuild()
GetUSAccountHolderNodeUSBusinessAccountHolderBusinessProfile.model_rebuild()
GetUSAccountHolderNodeUSPersonAccountHolder.model_rebuild()
