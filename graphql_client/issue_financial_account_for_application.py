# Generated by ariadne-codegen
# Source: queries.gql

from typing import Annotated, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import BankName, CardProductVertical


class IssueFinancialAccountForApplication(BaseModel):
    issue_financial_account_for_application: Optional[
        Annotated[
            Union[
                "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccount",
                "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationUserError",
                "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationAccessDeniedError",
            ],
            Field(discriminator="typename__"),
        ]
    ] = Field(alias="issueFinancialAccountForApplication")


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccount(
    BaseModel
):
    typename__: Literal["FinancialAccount"] = Field(alias="__typename")
    id: str
    external_id: Optional[str] = Field(alias="externalId")
    name: Optional[str]
    created_at: Optional[str] = Field(alias="createdAt")
    updated_at: Optional[str] = Field(alias="updatedAt")
    application: Optional[
        "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountApplication"
    ]
    card_product: Optional[
        "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountCardProduct"
    ] = Field(alias="cardProduct")
    features: Optional[
        List[
            "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountFeatures"
        ]
    ]
    direct_deposit_details: Optional[
        "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountDirectDepositDetails"
    ] = Field(alias="directDepositDetails")
    owner: Optional[
        Annotated[
            Union[
                "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountOwnerOrganization",
                "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountOwnerPaymentCard",
                "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountOwnerUSPersonAccountHolder",
                "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountOwnerUSBusinessAccountHolder",
            ],
            Field(discriminator="typename__"),
        ]
    ]


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountApplication(
    BaseModel
):
    id: str
    created_at: Optional[str] = Field(alias="createdAt")


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountCardProduct(
    BaseModel
):
    id: str
    vertical: Optional[CardProductVertical]


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountFeatures(
    BaseModel
):
    typename__: Literal[
        "AchCapableFinancialAccountFeature",
        "CardFundingFinancialAccountFeature",
        "CommercialCreditPayInFullCardAccountFeature",
        "CreditCardAccountFeature",
        "CreditPaymentCardFinancialAccountFeature",
        "DebitPaymentCardFinancialAccountFeature",
        "DirectDepositFinancialAccountFeature",
        "FinancialAccountFeature",
        "FleetCardAccountFeature",
        "IncomeAccountFinancialAccountFeature",
        "JustInTimeFundingFinancialAccountFeature",
        "MerchantSettlementFinancialAccountFeature",
        "NegativeBalanceReserveFinancialAccountFeature",
        "NonVerifiedFinancialAccountFeature",
        "OnDemandFundingFinancialAccountFeature",
        "PartialFundingFinancialAccountFeature",
        "PayrollAdvanceFinancialAccountFeature",
        "PayrollEmployerAdvanceFinancialAccountFeature",
        "PointRewardFinancialAccountFeature",
        "PrePaidPaymentCardFinancialAccountFeature",
        "PreprintedCardFinancialAccountFeature",
        "ProductFundingFinancialAccountFeature",
        "ProductReserveFinancialAccountFeature",
        "ProductSecuredDepositFinancialAccountFeature",
        "RepaymentFinancialAccountFeature",
        "SecuredCreditPaymentCardFinancialAccountFeature",
        "SecuredDepositFinancialAccountFeature",
        "VendorProvidedBankFinancialAccountFeature",
    ] = Field(alias="__typename")
    enabled: Optional[bool]
    created_at: Optional[str] = Field(alias="createdAt")
    updated_at: Optional[str] = Field(alias="updatedAt")


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountDirectDepositDetails(
    BaseModel
):
    id: str
    restricted_details: Optional[
        Annotated[
            Union[
                "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountDirectDepositDetailsRestrictedDetailsDirectDepositDetailRestrictedDetails",
                "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountDirectDepositDetailsRestrictedDetailsAccessDeniedError",
            ],
            Field(discriminator="typename__"),
        ]
    ] = Field(alias="restrictedDetails")


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountDirectDepositDetailsRestrictedDetailsDirectDepositDetailRestrictedDetails(
    BaseModel
):
    typename__: Literal["DirectDepositDetailRestrictedDetails"] = Field(
        alias="__typename"
    )
    number: Optional[str]
    routing_number: Optional[str] = Field(alias="routingNumber")
    bank: Optional[
        "IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountDirectDepositDetailsRestrictedDetailsDirectDepositDetailRestrictedDetailsBank"
    ]


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountDirectDepositDetailsRestrictedDetailsDirectDepositDetailRestrictedDetailsBank(
    BaseModel
):
    name: Optional[BankName]


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountDirectDepositDetailsRestrictedDetailsAccessDeniedError(
    BaseModel
):
    typename__: Literal["AccessDeniedError"] = Field(alias="__typename")


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountOwnerOrganization(
    BaseModel
):
    typename__: Literal["Organization"] = Field(alias="__typename")


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountOwnerPaymentCard(
    BaseModel
):
    typename__: Literal["PaymentCard"] = Field(alias="__typename")


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountOwnerUSPersonAccountHolder(
    BaseModel
):
    typename__: Literal["USPersonAccountHolder"] = Field(alias="__typename")
    id: str


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountOwnerUSBusinessAccountHolder(
    BaseModel
):
    typename__: Literal["USBusinessAccountHolder"] = Field(alias="__typename")


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationUserError(
    BaseModel
):
    typename__: Literal["UserError"] = Field(alias="__typename")


class IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationAccessDeniedError(
    BaseModel
):
    typename__: Literal["AccessDeniedError"] = Field(alias="__typename")


IssueFinancialAccountForApplication.model_rebuild()
IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccount.model_rebuild()
IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountDirectDepositDetails.model_rebuild()
IssueFinancialAccountForApplicationIssueFinancialAccountForApplicationFinancialAccountDirectDepositDetailsRestrictedDetailsDirectDepositDetailRestrictedDetails.model_rebuild()
